package mmx;

class Transaction extends TransactionBase {
	
	uint version;
	
	ulong nonce;
	
	optional<hash_t> salt;
	
	vector<tx_in_t> inputs;
	
	vector<tx_out_t> outputs;
	
	vector<tx_out_t> exec_outputs;
	
	vector<Operation*> execute;
	
	vector<Solution*> solutions;
	
	Contract* deploy;
	
	
	void finalize();
	
	void add_output(addr_t currency, addr_t address, ulong amount, uint split = 1);
	
	void merge_sign(Transaction* tx);
	
	bool is_valid() const;
	
	bool is_signed() const;
	
	hash_t calc_hash() const;
	
	Solution* get_solution(uint index) const;
	
	tx_out_t get_output(uint index) const;
	
	vector<tx_out_t> get_all_outputs() const;
	
	ulong calc_cost(ChainParams* params) const;
	
}
