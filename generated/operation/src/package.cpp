
// AUTO GENERATED by vnxcppcodegen

#include <mmx/operation/Mint.hxx>
#include <mmx/operation/Mutate.hxx>
#include <mmx/operation/Spend.hxx>

#include <mmx/operation/package.hxx>
#include <vnx/vnx.h>



namespace vnx {

const TypeCode* type<::mmx::operation::Mint>::get_type_code() {
	return mmx::operation::vnx_native_type_code_Mint;
}

void type<::mmx::operation::Mint>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::mmx::operation::Mint());
}

void type<::mmx::operation::Mint>::create_dynamic_code(std::vector<uint16_t>& code, const ::mmx::operation::Mint& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::mmx::operation::Mutate>::get_type_code() {
	return mmx::operation::vnx_native_type_code_Mutate;
}

void type<::mmx::operation::Mutate>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::mmx::operation::Mutate());
}

void type<::mmx::operation::Mutate>::create_dynamic_code(std::vector<uint16_t>& code, const ::mmx::operation::Mutate& value, bool special) {
	code.push_back(CODE_OBJECT);
}

const TypeCode* type<::mmx::operation::Spend>::get_type_code() {
	return mmx::operation::vnx_native_type_code_Spend;
}

void type<::mmx::operation::Spend>::create_dynamic_code(std::vector<uint16_t>& code) {
	create_dynamic_code(code, ::mmx::operation::Spend());
}

void type<::mmx::operation::Spend>::create_dynamic_code(std::vector<uint16_t>& code, const ::mmx::operation::Spend& value, bool special) {
	code.push_back(CODE_OBJECT);
}


} // namespace vnx


namespace mmx {
namespace operation {


static void register_all_types() {
	vnx::register_type_code(::mmx::operation::Mint::static_create_type_code());
	vnx::register_type_code(::mmx::operation::Mutate::static_create_type_code());
	vnx::register_type_code(::mmx::operation::Spend::static_create_type_code());
}

static struct vnx_static_init {
	vnx_static_init() {
		register_all_types();
	}
} vnx_static_init_;

const vnx::TypeCode* const vnx_native_type_code_Mint = vnx::get_type_code(vnx::Hash64(0x936aeac3aa6373c0ull));
const vnx::TypeCode* const vnx_native_type_code_Mutate = vnx::get_type_code(vnx::Hash64(0x174cf0ec53db63efull));
const vnx::TypeCode* const vnx_native_type_code_Spend = vnx::get_type_code(vnx::Hash64(0xfa01bec4331109c3ull));

} // namespace mmx
} // namespace operation
